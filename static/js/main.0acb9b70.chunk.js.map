{"version":3,"sources":["Front.js","new_moves.js","piece.js","App.js","Start.js","index.js"],"names":["Front","useState","to","moves","Rook","x","y","Pawn","PawnBlack","Knight","Queen","Bishop","King","App","props","state","board","heading","TEAMA","TEAMB","prevx","prevy","turn","enableHoverState","currState","currentCount","totalTime","isgameOver","loading","tm","arr","i","new_arr","j","push","Teamname","player","TEAMNAME","PLAYER","this","setState","swal","buttons","timer","clearInterval","intervalId","totaltimerId","createboard","diffboard","setInterval","bind","totaltimer","xx","yy","objectt","value","length","curx","cury","z","console","log","Number","play","new_moves","clicked_array","SetToSpecifiedValue","curr","now","piecename","get","present","name","piece","setTimeout","className","type","color","height","width","onClick","ToogleButton","map","row","rowidx","col","colidx","onMouseEnter","Hover","onMouseLeave","Leave","Clicked","WhichColorToShow","ImagetoShow","src","React","Component","Start","exact","path","children","ReactDOM","render","component","document","getElementById"],"mappings":"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","file":"static/js/main.0acb9b70.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nfunction Front() {\r\n  const [first, setfirst] = useState(\"\");\r\n  const [second, setsecond] = useState(\"\");\r\n  function First(event) {\r\n    setfirst(event.target.value);\r\n  }\r\n  function Second(event) {\r\n    setsecond(event.target.value);\r\n  }\r\n  return (\r\n    <div>\r\n      <h1> Chess Game </h1>\r\n      <h1> \"\"\"When you see a good move look for a better one\"\"\" </h1>\r\n      <h1> Game Instructions: </h1>\r\n      <h2>⦿ White Goes First </h2>\r\n      <h2>\r\n        {\" \"}\r\n        ⦿ Whenever you hover over a piece of chess it shows you suggested moves.{\" \"}\r\n      </h2>\r\n      <h2>\r\n        {\" \"}\r\n        ⦿ To move a piece first you have to click on a piece which you want to\r\n        move and then place where you want to place that piece.{\" \"}\r\n      </h2>\r\n      <h2> ⦿ There is also a button for On/Off suggested moves. </h2>\r\n      {/* <input onChange={First} value={first} placeholder=\"Player1\" /> */}\r\n      <Link to=\"/chess\">\r\n        <button> Let's Play 🧐</button>\r\n      </Link>\r\n      {/* <input onChange={Second} value={second} placeholder=\"Player2\" /> */}\r\n      <h3> Made with ♥ by Tushar Garg </h3>\r\n    </div>\r\n  );\r\n}\r\nexport default Front;\r\n","// Rook: hathi, Pawn: sainik , Knight: Ghoda, Queen: wazir,\r\n// Bishop: Unth , King : raja\r\nconst moves = {\r\n    Rook: [\r\n      { x: 1, y: 0 },\r\n      { x: 0, y: 1 },\r\n      { x: 0, y: -1 },\r\n      { x: -1, y: 0 }\r\n    ],\r\n    Pawn: [{ x: 1, y: 0 }],\r\n    PawnBlack: [{ x: -1, y: 0 }],\r\n    Knight: [\r\n      { x: 2, y: -1 },\r\n      { x: 2, y: 1 },\r\n      { x: 1, y: 2 },\r\n      { x: 1, y: -2 },\r\n      { x: -2, y: -1 },\r\n      { x: -2, y: 1 },\r\n      { x: -1, y: 2 },\r\n      { x: -1, y: -2 }\r\n    ],\r\n    Queen: [\r\n      { x: 1, y: 0 },\r\n      { x: -1, y: 0 },\r\n      { x: 0, y: -1 },\r\n      { x: 0, y: 1 },\r\n      { x: 1, y: -1 },\r\n      { x: -1, y: 1 },\r\n      { x: 1, y: 1 },\r\n      { x: -1, y: -1 }\r\n    ],\r\n    Bishop: [\r\n      { x: 1, y: -1 },\r\n      { x: -1, y: 1 },\r\n      { x: 1, y: 1 },\r\n      { x: -1, y: -1 }\r\n    ],\r\n    King: [\r\n      { x: 1, y: 0 },\r\n      { x: -1, y: 0 },\r\n      { x: 0, y: -1 },\r\n      { x: 0, y: 1 },\r\n      { x: 1, y: -1 },\r\n      { x: -1, y: 1 },\r\n      { x: 1, y: 1 },\r\n      { x: -1, y: -1 }\r\n    ]\r\n  };\r\n  export default moves;\r\n  ","export default {\r\n    Pawn: [\r\n      \"https://upload.wikimedia.org/wikipedia/commons/0/04/Chess_plt60.png\",\r\n      \"https://upload.wikimedia.org/wikipedia/commons/c/cd/Chess_pdt60.png\"\r\n    ],\r\n    Knight: [\r\n      \"https://upload.wikimedia.org/wikipedia/commons/2/28/Chess_nlt60.png\",\r\n      \"https://upload.wikimedia.org/wikipedia/commons/f/f1/Chess_ndt60.png\"\r\n    ],\r\n    Bishop: [\r\n      \"https://upload.wikimedia.org/wikipedia/commons/9/9b/Chess_blt60.png\",\r\n      \"https://upload.wikimedia.org/wikipedia/commons/8/81/Chess_bdt60.png\"\r\n    ],\r\n    King: [\r\n      \"https://upload.wikimedia.org/wikipedia/commons/3/3b/Chess_klt60.png\",\r\n      \"https://upload.wikimedia.org/wikipedia/commons/e/e3/Chess_kdt60.png\"\r\n    ],\r\n    Queen: [\r\n      \"https://upload.wikimedia.org/wikipedia/commons/4/49/Chess_qlt60.png\",\r\n      \"https://upload.wikimedia.org/wikipedia/commons/a/af/Chess_qdt60.png\"\r\n    ],\r\n    Rook: [\r\n      \"https://upload.wikimedia.org/wikipedia/commons/5/5c/Chess_rlt60.png\",\r\n      \"https://upload.wikimedia.org/wikipedia/commons/a/a0/Chess_rdt60.png\"\r\n    ]\r\n  };\r\n  ","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport \"./styles.css\";\nimport Loader from \"react-loader-spinner\";\nimport new_moves from \"./new_moves\";\nimport piece from \"./piece\";\nimport swal from \"sweetalert\";\nimport { Link } from \"react-router-dom\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      board: [[]],\n      heading: \"\",\n      TEAMA: [[]],\n      TEAMB: [[]],\n      prevx: -1,\n      prevy: -1,\n      turn: \"A\",\n      enableHoverState: 1,\n      currState: \"off\",\n      currentCount: 60,\n      totalTime: 0,\n      isgameOver: 0,\n      loading: true,\n      tm: 1000\n    };\n  }\n  diffboard() {\n    const arr = [];\n    for (var i = 0; i < 8; i++) {\n      const new_arr = [];\n      for (var j = 0; j < 8; j++) {\n        new_arr.push(0);\n      }\n      arr.push(new_arr);\n    }\n    return arr;\n  }\n  createboard() {\n    const arr = [];\n    for (var i = 0; i < 8; i++) {\n      const new_arr = [];\n      let Teamname = \"Empty\";\n      let player = \"Empty\";\n      if (i < 2) {\n        Teamname = \"A\";\n      }\n      if (i >= 6) {\n        Teamname = \"B\";\n      }\n      for (var j = 0; j < 8; j++) {\n        if (j === 0 || j === 7) {\n          player = \"Rook\";\n        }\n        if (j === 1 || j === 6) {\n          player = \"Knight\";\n        }\n        if (j === 2 || j === 5) {\n          player = \"Bishop\";\n        }\n        if (j === 3) {\n          player = \"King\";\n        }\n        if (j === 4) {\n          player = \"Queen\";\n        }\n        if (i === 1 || i === 6) {\n          player = \"Pawn\";\n        }\n        if (i === 7) {\n          if (j === 3) {\n            player = \"Queen\";\n          }\n          if (j === 4) {\n            player = \"King\";\n          }\n        }\n        if (Teamname === \"Empty\") {\n          player = \"Empty\";\n        }\n        new_arr.push({ TEAMNAME: Teamname, PLAYER: player });\n      }\n      arr.push(new_arr);\n    }\n    return arr;\n  }\n  timer() {\n    this.setState({\n      currentCount: this.state.currentCount - 1\n    });\n    if (this.state.currentCount < 1) {\n      if (this.state.turn === \"A\") {\n        swal(\"You cannot make a move and hence Team BLACK Wins\", {\n          buttons: false,\n          timer: 3000\n        });\n      } else {\n        swal(\"You cannot make a move and hence Team WHITE Wins\", {\n          buttons: false,\n          timer: 3000\n        });\n      }\n      this.setState({ isgameOver: 1 });\n    }\n    if (this.state.isgameOver === 1) {\n      clearInterval(this.intervalId);\n    }\n  }\n  totaltimer() {\n    this.setState({\n      totalTime: this.state.totalTime + 1\n    });\n    if (this.state.isgameOver === 1) {\n      clearInterval(this.totaltimerId);\n    }\n  }\n  componentDidMount() {\n    this.setState({\n      board: this.createboard(),\n      TEAMA: this.diffboard(),\n      TEAMB: this.diffboard(),\n      heading: \"Chess Game\",\n      prevx: -1,\n      prevy: -1,\n      turn: \"A\",\n      enableHoverState: 1,\n      currState: \"off\",\n      currentCount: 60,\n      totalTime: 0,\n      isgameOver: 0,\n      loading: true,\n      tm: 1000\n    });\n    this.intervalId = setInterval(this.timer.bind(this), this.state.tm);\n    this.totaltimerId = setInterval(this.totaltimer.bind(this), this.state.tm);\n  }\n  SetToSpecifiedValue(xx, yy, objectt, value) {\n    let arr = this.diffboard();\n    let player = this.state.board[xx][yy];\n    player = player.PLAYER; // store name of piece of teamA / teamB;\n    for (var i = 0; i < objectt.length; i++) {\n      var curx = xx + objectt[i].x;\n      var cury = yy + objectt[i].y;\n      while (curx < 8 && cury < 8 && curx >= 0 && cury >= 0) {\n        if (\n          this.state.board[curx][cury].TEAMNAME ===\n          this.state.board[xx][yy].TEAMNAME\n        ) {\n          break;\n        } else {\n          if (\n            player === \"Pawn\" &&\n            this.state.board[curx][cury].PLAYER !== \"Empty\" &&\n            this.state.board[xx][yy].TEAMNAME !==\n              this.state.board[curx][cury].TEAMNAME\n          ) {\n            //\n          } else {\n            if (this.state.board[curx][cury].PLAYER === \"King\") {\n              const z = this.state.board[curx][cury].PLAYER;\n              console.log(z);\n              arr[curx][cury] = 2;\n            } else {\n              arr[curx][cury] = Number(value);\n            }\n            curx = curx + objectt[i].x;\n            cury = cury + objectt[i].y;\n          }\n        }\n        if (\n          player === \"Pawn\" ||\n          player === \"Knight\" ||\n          player === \"King\" ||\n          (this.state.board[curx - objectt[i].x][cury - objectt[i].y]\n            .TEAMNAME !== this.state.board[xx][yy].TEAMNAME &&\n            this.state.board[curx - objectt[i].x][cury - objectt[i].y]\n              .TEAMNAME !== \"Empty\")\n        ) {\n          break;\n        }\n      }\n    }\n    if (player === \"Pawn\") {\n      if (this.state.board[xx][yy].TEAMNAME === \"A\") {\n        if (xx === 1) {\n          if (\n            arr[xx + 1][yy] === 1 &&\n            this.state.board[xx + 2][yy].TEAMNAME === \"Empty\"\n          ) {\n            arr[xx + 2][yy] = 1;\n          }\n        }\n        if (\n          xx < 7 &&\n          yy > 0 &&\n          this.state.board[xx + 1][yy - 1].PLAYER !== \"Empty\" &&\n          this.state.board[xx + 1][yy - 1].TEAMNAME !==\n            this.state.board[xx][yy].TEAMNAME\n        ) {\n          arr[xx + 1][yy - 1] = Number(value);\n        }\n        if (\n          xx < 7 &&\n          yy < 7 &&\n          this.state.board[xx + 1][yy + 1].PLAYER !== \"Empty\" &&\n          this.state.board[xx + 1][yy + 1].TEAMNAME !==\n            this.state.board[xx][yy].TEAMNAME\n        ) {\n          arr[xx + 1][yy + 1] = Number(value);\n        }\n      } else {\n        if (xx === 6) {\n          if (\n            arr[xx - 1][yy] === 1 &&\n            this.state.board[xx - 2][yy].TEAMNAME === \"Empty\"\n          ) {\n            arr[xx - 2][yy] = 1;\n          }\n        }\n        if (\n          xx > 0 &&\n          yy > 0 &&\n          this.state.board[xx - 1][yy - 1].PLAYER !== \"Empty\" &&\n          this.state.board[xx - 1][yy - 1].TEAMNAME !==\n            this.state.board[xx][yy].TEAMNAME\n        ) {\n          arr[xx - 1][yy - 1] = Number(value);\n        }\n        if (\n          xx > 0 &&\n          yy < 7 &&\n          this.state.board[xx - 1][yy + 1].PLAYER !== \"Empty\" &&\n          this.state.board[xx - 1][yy + 1].TEAMNAME !==\n            this.state.board[xx][yy].TEAMNAME\n        ) {\n          arr[xx - 1][yy + 1] = Number(value);\n        }\n      }\n    }\n    return arr;\n  }\n  Clicked(xx, yy) {\n    if (this.state.isgameOver === 1) {\n      swal(\"Game is over Press the button on your screen to go back.\", {\n        buttons: false,\n        timer: 2000\n      });\n      return;\n    }\n    let arr = this.state.board;\n    if (this.state.prevx === -1 && this.state.prevy === -1) {\n      if (arr[xx][yy].PLAYER !== \"Empty\") {\n        if (arr[xx][yy].TEAMNAME !== this.state.turn) {\n          swal(\"It's your opponent's turn\", {\n            buttons: false,\n            timer: 1000\n          });\n        } else {\n          this.setState({ prevx: xx, prevy: yy });\n        }\n      }\n      return;\n    }\n    let play = arr[this.state.prevx][this.state.prevy].PLAYER;\n    if (\n      play === \"Pawn\" &&\n      arr[this.state.prevx][this.state.prevy].TEAMNAME === \"B\"\n    ) {\n      play = \"PawnBlack\";\n    }\n    play = new_moves[play];\n    let clicked_array = this.SetToSpecifiedValue(\n      this.state.prevx,\n      this.state.prevy,\n      play,\n      1\n    );\n    clicked_array = clicked_array[xx][yy];\n    if (clicked_array === 0) {\n      this.setState({ prevx: -1, prevy: -1 });\n      swal(\"Wrong Move\", {\n        buttons: false,\n        timer: 1000\n      });\n    } else {\n      let arr = this.state.board;\n      if (arr[xx][yy].PLAYER === \"King\") {\n        if (this.state.turn === \"A\") {\n          swal(\"Team A Wins\", {\n            buttons: false,\n            timer: 3000\n          });\n        } else {\n          swal(\"Team B Wins\", {\n            buttons: false,\n            timer: 3000\n          });\n        }\n        this.setState({ isgameOver: 1 });\n      }\n      arr[xx][yy] = arr[this.state.prevx][this.state.prevy];\n      arr[this.state.prevx][this.state.prevy] = {\n        TEAMNAME: \"Empty\",\n        PLAYER: \"Empty\"\n      };\n      let curr = this.state.turn;\n      if (curr === \"A\") {\n        curr = \"B\";\n      } else {\n        curr = \"A\";\n      }\n      this.setState({\n        board: arr,\n        prevx: -1,\n        prevy: -1,\n        turn: curr,\n        currentCount: 60\n      });\n    }\n  }\n  Hover(x, y) {\n    const now = this.state.board[x][y];\n    let piecename = now.PLAYER;\n    if (piecename !== \"Empty\") {\n      if (now.TEAMNAME === \"A\") {\n        const get = this.SetToSpecifiedValue(x, y, new_moves[piecename], 1);\n        this.setState({ TEAMA: get });\n      } else {\n        if (piecename === \"Pawn\") {\n          piecename = \"PawnBlack\";\n        }\n        const get = this.SetToSpecifiedValue(x, y, new_moves[piecename], 1);\n        this.setState({ TEAMB: get });\n      }\n    }\n  }\n  Leave(x, y) {\n    const xx = this.diffboard();\n    this.setState({ TEAMA: xx, TEAMB: xx });\n  }\n  ImagetoShow(x, y) {\n    const present = this.state.board[x][y];\n    if (present.TEAMNAME === \"A\") {\n      const name = present.PLAYER;\n      return piece[name][0];\n    } else if (present.TEAMNAME === \"B\") {\n      const name = present.PLAYER;\n      return piece[name][1];\n    } else {\n      return \"\";\n    }\n  }\n  ToogleButton() {\n    let x;\n    if (this.state.currState === \"off\") {\n      x = \"on\";\n    } else {\n      x = \"off\";\n    }\n    this.setState({\n      enableHoverState: !this.state.enableHoverState,\n      currState: x\n    });\n  }\n  WhichColorToShow(xx, yy) {\n    if (this.state.prevx === xx && this.state.prevy === yy) {\n      return \"selected\";\n    }\n    if (this.state.enableHoverState) {\n      if (this.state.TEAMA[xx][yy] === 1) {\n        return \"yellow\";\n      }\n      if (this.state.TEAMA[xx][yy] === 2) {\n        return \"red\";\n      }\n      if (this.state.TEAMB[xx][yy] === 1) {\n        return \"blue\";\n      }\n      if (this.state.TEAMB[xx][yy] === 2) {\n        return \"red\";\n      }\n      if ((xx + yy) % 2 === 0) {\n        return \"brown\";\n      } else {\n        return \"light-brown\";\n      }\n    } else {\n      if ((xx + yy) % 2 === 0) {\n        return \"brown\";\n      } else {\n        return \"light-brown\";\n      }\n    }\n  }\n  render() {\n    if (this.state.loading === true) {\n      setTimeout(() => {\n        this.setState({ loading: false, currentCount: 60, totalTime: 0 });\n      }, 3000);\n      return (\n        <Loader\n          className=\"loader\"\n          type=\"BallTriangle\"\n          color=\"#00BFFF\"\n          height={100}\n          width={100}\n        />\n      );\n    }\n    return (\n      <div className=\"App \">\n        {this.state.isgameOver === 1 ? (\n          <Link to=\"/\">\n            <button className=\"btn-right\"> Go back</button>\n          </Link>\n        ) : null}\n        <h1 className=\"heading\"> {this.state.heading} </h1>\n        <h1 className=\"Totaltime\"> Total time: {this.state.totalTime} secs</h1>\n        <h1 className=\"TimeRemaining\">\n          Time Rem: {this.state.currentCount} secs\n        </h1>\n        <button\n          className=\"btn-left\"\n          onClick={() => {\n            this.ToogleButton();\n          }}\n        >\n          {\" \"}\n          Hover {this.state.currState}{\" \"}\n        </button>\n        {this.state.board.map((row, rowidx) => {\n          return (\n            <div className=\"row\">\n              {row.map((col, colidx) => {\n                return (\n                  <div\n                    onMouseEnter={() => {\n                      this.Hover(rowidx, colidx);\n                    }}\n                    onMouseLeave={() => {\n                      this.Leave(rowidx, colidx);\n                    }}\n                    onClick={() => {\n                      this.Clicked(rowidx, colidx);\n                    }}\n                    className={\"cell \" + this.WhichColorToShow(rowidx, colidx)}\n                  >\n                    {this.ImagetoShow(rowidx, colidx) !== \"\" ? (\n                      <img\n                        src={this.ImagetoShow(rowidx, colidx)}\n                        className=\"img\"\n                      />\n                    ) : null}\n                  </div>\n                );\n              })}\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport Front from \"./Front\";\r\nimport App from \"./App\";\r\nfunction Start() {\r\n  const [first, setfirst] = useState(\"\");\r\n  const [second, setsecond] = useState(\"\");\r\n  function First(event) {\r\n    setfirst(event.target.value);\r\n  }\r\n  function Second(event) {\r\n    setsecond(event.target.value);\r\n  }\r\n  \r\n  return (\r\n    <Router>\r\n      {/* <input onChange={First} value={first} placeholder=\"Player1\" />\r\n        <input onChange={Second} value={second} placeholder=\"Player2\" /> */}\r\n      <div className=\"App\">\r\n        {/* HOME AND ABOUT ROUTE */}\r\n        {/* <input onChange={First} value={first} placeholder=\"Player1\" />\r\n        <input onChange={Second} value={second} placeholder=\"Player2\" /> */}\r\n\r\n        <Route exact path=\"/\" children={<Front></Front>} />\r\n        <Route\r\n          path=\"/chess\"\r\n          children={<App></App>}\r\n        />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default Start;\r\n","// import \"bootstrap/dist/css/bootstrap.min.css\";\nimport { React } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"./styles.css\";\nimport Start from \"./Start\";\nReactDOM.render(\n  <Router>\n    <Route path=\"/\" component={Start}></Route>\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}